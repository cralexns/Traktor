// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Traktor.Core.Data;

namespace Traktor.Core.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1");

            modelBuilder.Entity("Traktor.Core.Domain.Media", b =>
                {
                    b.Property<int>("DbId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CollectedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FirstSpottedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Genres")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastScoutedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Magnet")
                        .HasColumnType("TEXT");

                    b.Property<string>("RelativePath")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Release")
                        .HasColumnType("TEXT");

                    b.Property<int>("State")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("StateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("WatchedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("WatchlistedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("DbId");

                    b.ToTable("Media");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Media");
                });

            modelBuilder.Entity("Traktor.Core.Domain.Episode", b =>
                {
                    b.HasBaseType("Traktor.Core.Domain.Media");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShowIMDB")
                        .HasColumnType("TEXT");

                    b.Property<string>("ShowSlug")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ShowTMDB")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ShowTVDB")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShowTitle")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ShowTrakt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalEpisodesInSeason")
                        .HasColumnType("INTEGER");

                    b.ToTable("Media");

                    b.HasDiscriminator().HasValue("Episode");
                });

            modelBuilder.Entity("Traktor.Core.Domain.Movie", b =>
                {
                    b.HasBaseType("Traktor.Core.Domain.Media");

                    b.ToTable("Media");

                    b.HasDiscriminator().HasValue("Movie");
                });

            modelBuilder.Entity("Traktor.Core.Domain.Media", b =>
                {
                    b.OwnsOne("Traktor.Core.Domain.Media+MediaId", "Id", b1 =>
                        {
                            b1.Property<int>("MediaDbId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("IMDB")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Slug")
                                .HasColumnType("TEXT");

                            b1.Property<int?>("TMDB")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("TVDB")
                                .HasColumnType("INTEGER");

                            b1.Property<int?>("Trakt")
                                .HasColumnType("INTEGER");

                            b1.HasKey("MediaDbId");

                            b1.ToTable("Media");

                            b1.WithOwner()
                                .HasForeignKey("MediaDbId");
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
